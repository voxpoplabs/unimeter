// Based on Spectre.css 0.5.3 | MIT License
// Core colors
$text-color: #333;
$primary-color: #06c;
$primary-color-dark: darken($primary-color, 3%);
$primary-color-light: lighten($primary-color, 3%);
$secondary-color: lighten($primary-color, 37.5%);
$secondary-color-dark: darken($secondary-color, 3%);
$secondary-color-light: lighten($secondary-color, 3%);
// Gray colors
$dark-color: #454d5d;
$light-color: #fff;
$gray-color: lighten($dark-color, 40%);
$gray-color-dark: darken($gray-color, 25%);
$gray-color-light: lighten($gray-color, 20%);
$border-color: lighten($dark-color, 60%);
$border-color-dark: darken($border-color, 10%);
$bg-color: lighten($dark-color, 65%);
$bg-color-dark: darken($bg-color, 3%);
$bg-color-light: $light-color;
// Control colors
$success-color: #32b643;
$warning-color: #ffb700;
$error-color: #e85600;
// Other colors
$code-color: #d73e48;
$highlight-color: #ffe9b3;
$link-color: $primary-color;
$link-color-dark: darken($link-color, 10%);
$link-color-light: lighten($link-color, 10%);
// Unit sizes
$unit-o: .1rem;
$unit-h: .2rem;
$unit-1: .4rem;
$unit-2: .8rem;
$unit-3: 1.2rem;
$unit-4: 1.6rem;
$unit-5: 2rem;
$unit-6: 2.4rem;
$unit-7: 2.8rem;
$unit-8: 3.2rem;
$unit-9: 3.6rem;
$unit-10: 4.2rem;
$unit-12: 4.8rem;
$unit-16: 6.4rem;
// Font sizes
$font-size: 1.4rem;
$font-size-sm: 1.2rem;
$font-size-lg: 1.8rem;
$line-height: 2.4rem;
// Sizes
$layout-spacing: $unit-2;
$layout-spacing-sm: $unit-1;
$layout-spacing-lg: $unit-4;
$border-radius: .3rem;
$border-width: $unit-o;
$border-width-lg: $unit-h;
$control-size: $unit-9;
$control-size-sm: $unit-7;
$control-size-lg: $unit-10;
$control-padding-x: $unit-2;
$control-padding-x-sm: $unit-2 * .75;
$control-padding-x-lg: $unit-2 * 1.5;
$control-padding-y: ($control-size - $line-height) / 2 - $border-width;
$control-padding-y-sm: ($control-size-sm - $line-height) / 2 - $border-width;
$control-padding-y-lg: ($control-size-lg - $line-height) / 2 - $border-width;
$control-icon-size: 1.6rem;
$control-width-xs: 180px;
$control-width-sm: 320px;
$control-width-md: 640px;
$control-width-lg: 960px;
$control-width-xl: 1280px;
// Responsive breakpoints
$size-xs: 480px;
$size-sm: 600px;
$size-md: 840px;
$size-lg: 960px;
$size-xl: 1280px;
$size-2x: 1440px;
$responsive-breakpoint: $size-xs;
// Z-index
$zindex-0: 1;
$zindex-1: 100;
$zindex-2: 200;
$zindex-3: 300;
$zindex-4: 400;
// Button variant mixin
@mixin button-variant($color: $primary-color) {
	background: $color;
	border-color: darken($color, 3%);
	color: $light-color;
	&:focus {
		@include control-shadow($color);
	}
	&:focus,
	&:hover {
		background: darken($color, 2%);
		border-color: darken($color, 5%);
		color: $light-color;
	}
	&:active,
	&.active {
		background: darken($color, 7%);
		border-color: darken($color, 10%);
		color: $light-color;
	}
	&.loading {
		&::after {
			border-bottom-color: $light-color;
			border-left-color: $light-color;
		}
	}
}
// Label base style
@mixin label-base() {
	border-radius: $border-radius;
	line-height: 1.2;
	padding: .1rem .2rem;
}
@mixin label-variant($color: $light-color, $bg-color: $primary-color) {
	background: $bg-color;
	color: $color;
}
// Component focus shadow
@mixin control-shadow($color: $primary-color) {
	box-shadow: 0 0 0 .1rem rgba($color, .2);
}
// Shadow mixin
@mixin shadow-variant($offset) {
	box-shadow: 0 $offset ($offset + .05rem) * 2 rgba($dark-color, .3);
}
// Text ellipsis
@mixin text-ellipsis() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
// Toast variant mixin
@mixin toast-variant($color: $dark-color) {
	background: rgba($color, .9);
	border-color: $color;
}
// Component transition
@mixin control-transition() {
	transition: all .1s ease;
}
html {
	font-size: 10px;
	line-height: 1.4;
}
body {
	color: $text-color;
	font-family: Arial, sans-serif;
	font-size: $font-size;
	margin: 0;
}
a,
article,
button,
div,
form,
footer,
header,
i,
img,
input,
label,
main,
nav,
section,
select,
textarea,
td,
th {
	box-sizing: border-box;
}
button,
input,
select,
textarea {
	font-family: Arial, sans-serif;
	margin: 0;
}
button,
input {
	overflow: visible;
}
input[type="number"] {
	-moz-appearance: textfield;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	-webkit-appearance: none;
}
main {
	display: block;
}
a {
	color: $link-color;
	outline: none;
	text-decoration: none;
	&:focus {
		@include control-shadow();
	}
	&:focus,
	&:hover,
	&:active,
	&.active {
		color: $link-color-dark;
		text-decoration: underline;
	}
}
h1,
h2,
h3,
h4,
h5,
h6 {
	line-height: 1.2;
	margin: 0;
}
h1 {
	font-size: 3.2rem;
}
h2 {
	font-size: 2.4rem;
}
h3 {
	font-size: 2rem;
}
h4 {
	font-size: 1.6rem;
}
h5 {
	font-size: 1rem;
}
h6 {
	font-size: .8rem;
}
p {
	margin: 0 0 1em;
}
blockquote {
	border-left: $border-width-lg solid $border-color;
	margin-left: 0;
	padding: $unit-2 $unit-4;
	p:last-child {
		margin-bottom: 0;
	}
}
.table {
	border-collapse: collapse;
	border-spacing: 0;
	table-layout: fixed;
	width: 100%;
	&.table-striped {
		tbody {
			tr:nth-of-type(odd) {
				background: $bg-color;
			}
		}
	}
	&,
	&.table-striped {
		tbody {
			tr {
				&.active {
					background: $bg-color-dark;
				}
			}
		}
	}
	&.table-hover {
		tbody {
			tr {
				&:hover {
					background: $bg-color-dark;
				}
			}
		}
	}
	&.table-scroll {
		display: block;
		overflow-x: auto;
		padding-bottom: .75rem;
		white-space: nowrap;
	}
	td,
	th {
		border-bottom: $border-width solid $border-color;
		padding: $unit-3 $unit-2;
	}
	th {
		border-bottom-width: $border-width-lg;
		text-align: inherit;
	}
}
.btn {
	appearance: none;
	background-color: white;
	border: $border-width solid $border-color-dark;
	border-radius: $border-radius;
	color: $primary-color;
	cursor: pointer;
	display: inline-block;
	font-size: inherit;
	height: $control-size;
	line-height: $line-height;
	outline: none;
	padding: $control-padding-y $control-padding-x;
	text-align: center;
	text-decoration: none;
	user-select: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	vertical-align: middle;
	white-space: nowrap;
	&:focus {
		@include control-shadow();
	}
	&:focus,
	&:hover {
		background-color: $bg-color;
		border-color: $border-color-dark;
		text-decoration: none;
	}
	&:active,
	&.active {
		background-color: $primary-color-dark;
		border-color: darken($primary-color-dark, 5%);
		color: $light-color;
		text-decoration: none;
		&.loading {
			&::after {
				border-bottom-color: $light-color;
				border-left-color: $light-color;
			}
		}
	}
	&[disabled],
	&:disabled,
	&.disabled {
		cursor: default;
		opacity: .5;
		pointer-events: none;
	}
	&.btn-primary {
		background-color: $primary-color;
		border-color: $primary-color;
		color: $light-color;
		&:focus,
		&:hover {
			background-color: darken($primary-color-dark, 2%);
			border-color: darken($primary-color-dark, 5%);
			color: $light-color;
		}
		&:active,
		&.active {
			background-color: darken($primary-color-dark, 4%);
			border-color: darken($primary-color-dark, 7%);
			color: $light-color;
		}
		&.loading {
			&::after {
				border-bottom-color: $light-color;
				border-left-color: $light-color;
			}
		}
	}
	&.btn-success {
		@include button-variant($success-color);
	}
	&.btn-error {
		@include button-variant($error-color);
	}
	&.btn-link {
		background: transparent;
		border-color: transparent;
		color: $link-color;
		&:focus,
		&:hover,
		&:active,
		&.active {
			color: $link-color-dark;
		}
	}
	&.btn-sm {
		height: $control-size-sm;
		padding: $control-padding-y-sm $control-padding-x-sm;
	}
	&.btn-lg {
		height: $control-size-lg;
		padding: $control-padding-y-lg $control-padding-x-lg;
	}
	&.btn-block {
		display: block;
		width: 100%;
	}
	&.btn-action {
		width: $control-size;
		padding-left: 0;
		padding-right: 0;
		&.btn-sm {
			width: $control-size-sm;
		}
		&.btn-lg {
			width: $control-size-lg;
		}
	}
	&.btn-clear {
		background: transparent;
		border: 0;
		color: currentColor;
		height: $unit-4;
		line-height: $unit-4;
		margin-left: $unit-1;
		margin-right: -2px;
		opacity: 1;
		padding: 0;
		text-decoration: none;
		width: $unit-4;
		&:hover {
			opacity: .95;
		}
		&::before {
			content: "\2715";
		}
	}
}
.btn-group {
	display: inline-flex;
	flex-wrap: wrap;
	.btn {
		flex: 1 0 auto;
		&:first-child:not(:last-child) {
			border-bottom-right-radius: 0;
			border-top-right-radius: 0;
		}
		&:not(:first-child):not(:last-child) {
			border-radius: 0;
			margin-left: -$border-width;
		}
		&:last-child:not(:first-child) {
			border-bottom-left-radius: 0;
			border-top-left-radius: 0;
			margin-left: -$border-width;
		}
		&:focus,
		&:hover,
		&:active,
		&.active {
			z-index: $zindex-0;
		}
	}
	&.btn-group-block {
		display: flex;
		.btn {
			flex: 1 0 0;
		}
	}
}
.form-group {
	margin-bottom: $layout-spacing-lg;
	&.column:not(:first-child) {
		margin-left: $layout-spacing-lg;
	}
}
.form-input,
.form-select {
	appearance: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	background-color: white;
	border: $border-width solid $border-color-dark;
	border-radius: $border-radius;
	display: block;
	font-size: inherit;
	height: $control-size;
	line-height: $line-height;
	max-width: 100%;
	outline: none;
	padding: $control-padding-y $control-padding-x;
	position: relative;
	transition: .1s;
	width: 100%;
	&:focus {
		border-color: $primary-color;
		box-shadow: 0 0 .25rem $primary-color;
	}
	&::placeholder {
		color: $gray-color;
	}
	&.input-sm {
		height: $control-size-sm;
		padding: $control-padding-y-sm $control-padding-x-sm;
	}
	&.input-lg {
		height: $control-size-lg;
		padding: $control-padding-y-lg $control-padding-x-lg;
	}
	&.input-inline {
		display: inline-block;
		vertical-align: middle;
		width: auto;
	}
	&[type="file"] {
		height: auto;
	}
	&[maxlength] {
		padding-right: 7rem;
		+ .max {
			bottom: .4em;
			font-size: .9em;
			line-height: 1;
			position: absolute;
			right: .5em;
			text-align: right;
		}
	}
}
.form-select {
	background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%204%205'%3E%3Cpath%20fill='%23667189'%20d='M2%200L0%202h4zm0%205L0%203h4z'/%3E%3C/svg%3E") no-repeat right .7rem center/.8rem 1rem;
	padding-right: $control-icon-size + $control-padding-x;
	&.input-sm {
		padding-right: ($control-icon-size + $control-padding-x-sm);
	}
	&.input-lg {
		padding-right: ($control-icon-size + $control-padding-x-lg);
	}
}
textarea.form-input,
textarea.form-input.input-sm,
textarea.form-input.input-lg {
	height: auto;
}
.form-input-hint {
	color: $gray-color;
	font-size: $font-size-sm;
	margin-top: $unit-1;
	.has-success &,
	.is-success + & {
		color: $success-color;
	}
	.has-error &,
	.is-error + & {
		color: $error-color;
	}
}
.form-label {
	display: inline-block;
	line-height: $line-height;
	&[data-icon] {
		position: relative;
		~ .form-input,
		~ .form-select {
			padding-left: 4rem;
		}
		&::before {
			content: attr(data-icon);
			font-family: FontAwesome;
			font-size: inherit;
			left: 0;
			line-height: $control-size;
			position: absolute;
			text-align: center;
			top: 100%;
			width: 4rem;
			z-index: 1;
		}
	}
	&.optional::after {
		content: " (optional)";
		font-size: .9em;
		opacity: .6;
	}
}
.has-icon-left,
.has-icon-right {
	position: relative;
	.form-icon {
		height: $control-icon-size;
		margin: 0 $control-padding-y;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: $control-icon-size;
		z-index: $zindex-0 + 1;
	}
}
.has-icon-left {
	.form-icon {
		left: $border-width;
	}
	.form-input {
		padding-left: $control-icon-size + $control-padding-y * 2;
	}
}
.has-icon-right {
	.form-icon {
		right: $border-width;
	}
	.form-input {
		padding-right: $control-icon-size + $control-padding-y * 2;
	}
}
.form-checkbox,
.form-radio,
.form-switch {
	cursor: pointer;
	display: inline-block;
	line-height: $line-height;
	margin: ($control-size - $control-size-sm) / 2 0;
	min-height: 1.2rem;
	position: relative;
	input {
		clip: rect(0, 0, 0, 0);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		position: absolute;
		width: 1px;
		&:focus + .form-icon {
			@include control-shadow();
			border-color: $primary-color;
		}
		&:checked + .form-icon {
			background: $text-color;
			border-color: $text-color;
		}
	}
	.form-icon {
		border: $border-width solid $border-color-dark;
		cursor: pointer;
		display: inline-block;
		position: relative;
		vertical-align: middle;
		+ span {
			vertical-align: middle;
		}
	}
	&.input-sm {
		font-size: $font-size-sm;
		margin: 0;
	}
	&.input-lg {
		font-size: $font-size-lg;
		margin: ($control-size-lg - $control-size-sm) / 2 0;
	}
}
.form-checkbox,
.form-radio {
	.form-icon {
		background-color: white;
		height: 2rem;
		width: 2rem;
	}
	input {
		&:checked + .form-icon {
			&::before {
				background-clip: padding-box;
				border: 0.2rem solid white;
				border-left-width: 0;
				border-top-width: 0;
				box-sizing: border-box;
				content: "";
				height: 11px;
				left: 50%;
				margin-left: -3px;
				margin-top: -7px;
				position: absolute;
				top: 50%;
				transform: rotate(45deg);
				width: 7px;
			}
		}
	}
}
.form-checkbox {
	.form-icon {
		border-radius: $border-radius;
	}
	&:indeterminate + .form-icon {
		background: $primary-color;
		border-color: $primary-color;
		&::before {
			background: $bg-color-light;
			content: "";
			height: 2px;
			left: 50%;
			margin-left: -5px;
			margin-top: -1px;
			position: absolute;
			top: 50%;
			width: 10px;
		}
	}
}
.form-radio {
	.form-icon {
		border-radius: 50%;
	}
}
.form-switch {
	padding-left: ($unit-8 + $control-padding-x);
	.form-icon {
		background: $gray-color-light;
		background-clip: padding-box;
		border-radius: $unit-2 + $border-width;
		height: $unit-4 + $border-width * 2;
		left: 0;
		top: ($control-size-sm - $unit-4) / 2 - $border-width;
		width: $unit-8;
		&::before {
			@include control-transition();
			background: $bg-color-light;
			border-radius: 50%;
			content: "";
			display: block;
			height: $unit-4;
			left: 0;
			position: absolute;
			top: 0;
			width: $unit-4;
		}
	}
	input {
		&:checked + .form-icon {
			&::before {
				left: 14px;
			}
		}
		&:active + .form-icon {
			&::before {
				background: $bg-color;
			}
		}
	}
}
.input-group {
	display: flex;
	.input-group-addon {
		background: $bg-color;
		border: $border-width solid $border-color-dark;
		border-radius: $border-radius;
		line-height: $line-height;
		padding: $control-padding-y $control-padding-x;
		white-space: nowrap;
		&.addon-sm {
			font-size: $font-size-sm;
			padding: $control-padding-y-sm $control-padding-x-sm;
		}
		&.addon-lg {
			font-size: $font-size-lg;
			padding: $control-padding-y-lg $control-padding-x-lg;
		}
	}
	.form-input,
	.form-select {
		flex: 1 1 auto;
		width: 1%;
	}
	.input-group-btn {
		z-index: $zindex-0;
	}
	.form-input,
	.form-select,
	.input-group-addon,
	.input-group-btn {
		&:first-child:not(:last-child) {
			border-bottom-right-radius: 0;
			border-top-right-radius: 0;
		}
		&:not(:first-child):not(:last-child) {
			border-radius: 0;
			margin-left: -$border-width;
		}
		&:last-child:not(:first-child) {
			border-bottom-left-radius: 0;
			border-top-left-radius: 0;
			margin-left: -$border-width;
		}
		&:focus {
			z-index: $zindex-0 + 1;
		}
	}
	.form-select {
		width: auto;
	}
	&.input-inline {
		display: inline-flex;
	}
}
.form-input,
.form-select {
	.has-success &,
	&.is-success {
		border-color: $success-color;
		&:focus {
			@include control-shadow($success-color);
		}
	}
	.has-error &,
	&.is-error {
		border-color: $error-color;
		&:focus {
			@include control-shadow($error-color);
		}
	}
}
.form-checkbox,
.form-radio,
.form-switch {
	.has-error &,
	&.is-error {
		.form-icon {
			border-color: $error-color;
		}
		input {
			&:checked + .form-icon {
				background: $error-color;
				border-color: $error-color;
			}
			&:focus + .form-icon {
				@include control-shadow($error-color);
				border-color: $error-color;
			}
		}
	}
}
.form-checkbox {
	.has-error &,
	&.is-error {
		input {
			&:indeterminate + .form-icon {
				background: $error-color;
				border-color: $error-color;
			}
		}
	}
}
.form-input,
.form-select {
	&:disabled,
	&.disabled {
		background-color: $bg-color-dark;
		cursor: not-allowed;
		opacity: .5;
	}
}
.form-input {
	&[readonly] {
		background-color: $bg-color;
	}
}
input {
	&:disabled,
	&.disabled {
		& + .form-icon {
			background: $bg-color-dark;
			cursor: not-allowed;
			opacity: .5;
		}
	}
}
.form-switch {
	input {
		&:disabled,
		&.disabled {
			& + .form-icon::before {
				background: $bg-color-light;
			}
		}
	}
}
.form-horizontal {
	padding: $layout-spacing 0;
	.form-group {
		display: flex;
		flex-wrap: wrap;
	}
}
.form-inline {
	display: inline-block;
}
.label {
	@include label-base();
	display: inline-block;
	&.label-rounded {
		border-radius: 5rem;
		padding-left: .4rem;
		padding-right: .4rem;
	}
	&.label-primary {
		@include label-variant($light-color,
		$primary-color);
	}
	&.label-secondary {
		@include label-variant($primary-color,
		$secondary-color);
	}
	&.label-success {
		@include label-variant($light-color,
		$success-color);
	}
	&.label-warning {
		@include label-variant($light-color,
		$warning-color);
	}
	&.label-error {
		@include label-variant($light-color,
		$error-color);
	}
}
code {
	@include label-base();
	@include label-variant($code-color,
	lighten($code-color, 42.5%));
	font-size: 85%;
}
pre.fixed {
	background-color: rgba(245, 222, 179, .8);
	color: black;
	left: 0;
	margin: 0;
	padding: .25rem .5rem;
	top: 0;
	z-index: 10000;
}
.code {
	border-radius: $border-radius;
	position: relative;
	&::before {
		color: $gray-color;
		content: attr(data-lang);
		font-size: $font-size-sm;
		position: absolute;
		right: $layout-spacing;
		top: $unit-h;
	}
	code {
		background: $bg-color;
		color: inherit;
		display: block;
		line-height: 1.5;
		overflow-x: auto;
		padding: 1rem;
		width: 100%;
	}
}
.container {
	margin-left: auto;
	margin-right: auto;
	max-width: 120rem;
	width: 90%;
}
.grid-lg {
	max-width: $size-lg;
}
.grid-md {
	max-width: $size-md;
}
.show-xs,
.show-sm,
.show-md,
.show-lg,
.show-xl {
	display: none !important;
}
.columns {
	display: flex;
	flex-wrap: wrap;
}
.column {
	flex: 1;
	max-width: 100%;
	&.col-12,
	&.col-11,
	&.col-10,
	&.col-9,
	&.col-8,
	&.col-7,
	&.col-6,
	&.col-5,
	&.col-4,
	&.col-3,
	&.col-2,
	&.col-1 {
		flex: none;
	}
}
.col-12 {
	width: 100%;
}
.col-11 {
	width: 91.66666667%;
}
.col-10 {
	width: 83.33333333%;
}
.col-9 {
	width: 75%;
}
.col-8 {
	width: 66.66666667%;
}
.col-7 {
	width: 58.33333333%;
}
.col-6 {
	width: 50%;
}
.col-5 {
	width: 41.66666667%;
}
.col-4 {
	width: 33.33333333%;
}
.col-3 {
	width: 25%;
}
.col-2 {
	width: 16.66666667%;
}
.col-1 {
	width: 8.33333333%;
}
.col-auto {
	flex: 0 0 auto;
	max-width: none;
	width: auto;
}
.col-mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.col-ml-auto {
	margin-left: auto;
}
.col-mr-auto {
	margin-right: auto;
}
@media (max-width: $size-xl) {
	.col-xl-12,
	.col-xl-11,
	.col-xl-10,
	.col-xl-9,
	.col-xl-8,
	.col-xl-7,
	.col-xl-6,
	.col-xl-5,
	.col-xl-4,
	.col-xl-3,
	.col-xl-2,
	.col-xl-1 {
		flex: none;
	}
	.col-xl-12 {
		width: 100%;
	}
	.col-xl-11 {
		width: 91.66666667%;
	}
	.col-xl-10 {
		width: 83.33333333%;
	}
	.col-xl-9 {
		width: 75%;
	}
	.col-xl-8 {
		width: 66.66666667%;
	}
	.col-xl-7 {
		width: 58.33333333%;
	}
	.col-xl-6 {
		width: 50%;
	}
	.col-xl-5 {
		width: 41.66666667%;
	}
	.col-xl-4 {
		width: 33.33333333%;
	}
	.col-xl-3 {
		width: 25%;
	}
	.col-xl-2 {
		width: 16.66666667%;
	}
	.col-xl-1 {
		width: 8.33333333%;
	}
	.hide-xl {
		display: none !important;
	}
	.show-xl {
		display: block !important;
	}
}
@media (max-width: $size-lg) {
	.col-lg-12,
	.col-lg-11,
	.col-lg-10,
	.col-lg-9,
	.col-lg-8,
	.col-lg-7,
	.col-lg-6,
	.col-lg-5,
	.col-lg-4,
	.col-lg-3,
	.col-lg-2,
	.col-lg-1 {
		flex: none;
	}
	.col-lg-12 {
		width: 100%;
	}
	.col-lg-11 {
		width: 91.66666667%;
	}
	.col-lg-10 {
		width: 83.33333333%;
	}
	.col-lg-9 {
		width: 75%;
	}
	.col-lg-8 {
		width: 66.66666667%;
	}
	.col-lg-7 {
		width: 58.33333333%;
	}
	.col-lg-6 {
		width: 50%;
	}
	.col-lg-5 {
		width: 41.66666667%;
	}
	.col-lg-4 {
		width: 33.33333333%;
	}
	.col-lg-3 {
		width: 25%;
	}
	.col-lg-2 {
		width: 16.66666667%;
	}
	.col-lg-1 {
		width: 8.33333333%;
	}
	.hide-lg {
		display: none !important;
	}
	.show-lg {
		display: block !important;
	}
}
@media (max-width: $size-md) {
	.col-md-12,
	.col-md-11,
	.col-md-10,
	.col-md-9,
	.col-md-8,
	.col-md-7,
	.col-md-6,
	.col-md-5,
	.col-md-4,
	.col-md-3,
	.col-md-2,
	.col-md-1 {
		flex: none;
	}
	.col-md-12 {
		width: 100%;
	}
	.col-md-11 {
		width: 91.66666667%;
	}
	.col-md-10 {
		width: 83.33333333%;
	}
	.col-md-9 {
		width: 75%;
	}
	.col-md-8 {
		width: 66.66666667%;
	}
	.col-md-7 {
		width: 58.33333333%;
	}
	.col-md-6 {
		width: 50%;
	}
	.col-md-5 {
		width: 41.66666667%;
	}
	.col-md-4 {
		width: 33.33333333%;
	}
	.col-md-3 {
		width: 25%;
	}
	.col-md-2 {
		width: 16.66666667%;
	}
	.col-md-1 {
		width: 8.33333333%;
	}
	.hide-md {
		display: none !important;
	}
	.show-md {
		display: block !important;
	}
}
@media (max-width: $size-sm) {
	.col-sm-12,
	.col-sm-11,
	.col-sm-10,
	.col-sm-9,
	.col-sm-8,
	.col-sm-7,
	.col-sm-6,
	.col-sm-5,
	.col-sm-4,
	.col-sm-3,
	.col-sm-2,
	.col-sm-1 {
		flex: none;
	}
	.col-sm-12 {
		width: 100%;
	}
	.col-sm-11 {
		width: 91.66666667%;
	}
	.col-sm-10 {
		width: 83.33333333%;
	}
	.col-sm-9 {
		width: 75%;
	}
	.col-sm-8 {
		width: 66.66666667%;
	}
	.col-sm-7 {
		width: 58.33333333%;
	}
	.col-sm-6 {
		width: 50%;
	}
	.col-sm-5 {
		width: 41.66666667%;
	}
	.col-sm-4 {
		width: 33.33333333%;
	}
	.col-sm-3 {
		width: 25%;
	}
	.col-sm-2 {
		width: 16.66666667%;
	}
	.col-sm-1 {
		width: 8.33333333%;
	}
	.hide-sm {
		display: none !important;
	}
	.show-sm {
		display: block !important;
	}
}
@media (max-width: $size-xs) {
	.col-xs-12,
	.col-xs-11,
	.col-xs-10,
	.col-xs-9,
	.col-xs-8,
	.col-xs-7,
	.col-xs-6,
	.col-xs-5,
	.col-xs-4,
	.col-xs-3,
	.col-xs-2,
	.col-xs-1 {
		flex: none;
	}
	.col-xs-12 {
		width: 100%;
	}
	.col-xs-11 {
		width: 91.66666667%;
	}
	.col-xs-10 {
		width: 83.33333333%;
	}
	.col-xs-9 {
		width: 75%;
	}
	.col-xs-8 {
		width: 66.66666667%;
	}
	.col-xs-7 {
		width: 58.33333333%;
	}
	.col-xs-6 {
		width: 50%;
	}
	.col-xs-5 {
		width: 41.66666667%;
	}
	.col-xs-4 {
		width: 33.33333333%;
	}
	.col-xs-3 {
		width: 25%;
	}
	.col-xs-2 {
		width: 16.66666667%;
	}
	.col-xs-1 {
		width: 8.33333333%;
	}
	.hide-xs {
		display: none !important;
	}
	.show-xs {
		display: block !important;
	}
}
.navbar {
	align-items: stretch;
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	.navbar-section {
		align-items: center;
		display: flex;
		flex: 1 0 0;
		&:not(:first-child):last-child {
			justify-content: flex-end;
		}
	}
	.navbar-center {
		align-items: center;
		display: flex;
		flex: 0 0 auto;
	}
	.navbar-brand {
		font-size: $font-size-lg;
		font-weight: 500;
		text-decoration: none;
	}
}
.avatar {
	background-color: $primary-color;
	border-radius: 50%;
	color: rgba($light-color, .85);
	display: inline-block;
	font-size: $unit-8 / 2;
	font-weight: 300;
	height: $unit-8;
	line-height: 1.25;
	margin: 0;
	position: relative;
	vertical-align: middle;
	width: $unit-8;
	img {
		border-radius: 50%;
		height: 100%;
		position: relative;
		width: 100%;
		z-index: $zindex-0;
	}
	.avatar-icon,
	.avatar-presence {
		background: $bg-color-light;
		bottom: 14.64%;
		height: 50%;
		padding: $border-width-lg;
		position: absolute;
		right: 14.64%;
		transform: translate(50%, 50%);
		width: 50%;
		z-index: $zindex-0 + 1;
	}
	.avatar-presence {
		background: $gray-color;
		box-shadow: 0 0 0 $border-width-lg $light-color;
		border-radius: 50%;
		height: .5em;
		width: .5em;
		&.online {
			background: $success-color;
		}
		&.busy {
			background: $error-color;
		}
		&.away {
			background: $warning-color;
		}
	}
	&[data-initial]::before {
		color: currentColor;
		content: attr(data-initial);
		left: 50%;
		position: absolute;
		top: 50%;
		transform: translate(-50%, -50%);
		z-index: $zindex-0;
	}
}
.badge {
	position: relative;
	white-space: nowrap;
	&[data-badge],
	&:not([data-badge]) {
		&::after {
			background: $primary-color;
			background-clip: padding-box;
			border-radius: .5rem;
			box-shadow: 0 0 0 .1rem $bg-color-light;
			color: $light-color;
			content: attr(data-badge);
			display: inline-block;
			transform: translate(-.05rem, -.5rem);
		}
	}
	&[data-badge] {
		&::after {
			font-size: $font-size-sm;
			height: .9rem;
			line-height: 1;
			min-width: .9rem;
			padding: .1rem .2rem;
			text-align: center;
			white-space: nowrap;
		}
	}
	&:not([data-badge]),
	&[data-badge=""] {
		&::after {
			height: 6px;
			min-width: 6px;
			padding: 0;
			width: 6px;
		}
	}
	&.btn {
		&::after {
			position: absolute;
			top: 0;
			right: 0;
			transform: translate(50%, -50%);
		}
	}
	&.avatar {
		&::after {
			position: absolute;
			top: 14.64%;
			right: 14.64%;
			transform: translate(50%, -50%);
			z-index: $zindex-1;
		}
	}
}
.breadcrumb {
	list-style: none;
	margin: $unit-1 0;
	padding: $unit-1 0;
	.breadcrumb-item {
		color: $gray-color-dark;
		display: inline-block;
		margin: 0;
		padding: $unit-1 0;
		&:not(:last-child) {
			margin-right: $unit-1;
			a {
				color: $gray-color-dark;
			}
		}
		&:not(:first-child) {
			&::before {
				color: $gray-color-light;
				content: "/";
				padding-right: $unit-2;
			}
		}
	}
}
.bar {
	background: $bg-color-dark;
	border-radius: $border-radius;
	display: flex;
	flex-wrap: nowrap;
	height: $unit-4;
	width: 100%;
	&.bar-sm {
		height: $unit-1;
	}
	.bar-item {
		background: $primary-color;
		color: $light-color;
		display: block;
		font-size: $font-size-sm;
		flex-shrink: 0;
		line-height: $unit-4;
		height: 100%;
		position: relative;
		text-align: center;
		width: 0;
		&:first-child {
			border-bottom-left-radius: $border-radius;
			border-top-left-radius: $border-radius;
		}
		&:last-child {
			border-bottom-right-radius: $border-radius;
			border-top-right-radius: $border-radius;
			flex-shrink: 1;
		}
	}
}
.bar-slider {
	height: $border-width-lg;
	margin: $layout-spacing 0;
	position: relative;
	.bar-item {
		left: 0;
		padding: 0;
		position: absolute;
		&:not(:last-child):first-child {
			background: $bg-color-dark;
			z-index: $zindex-0;
		}
	}
	.bar-slider-btn {
		background: $primary-color;
		border: 0;
		border-radius: 50%;
		height: $unit-3;
		padding: 0;
		position: absolute;
		right: 0;
		top: 50%;
		transform: translate(50%, -50%);
		width: $unit-3;
		&:active {
			box-shadow: 0 0 0 .1rem $primary-color;
		}
	}
}
.card {
	background: $bg-color-light;
	border: $border-width solid $border-color;
	border-radius: $border-radius;
	display: flex;
	flex-direction: column;
	.card-header,
	.card-body,
	.card-footer {
		padding: $layout-spacing-lg;
		padding-bottom: 0;
		&:last-child {
			padding-bottom: $layout-spacing-lg;
		}
	}
	.card-body {
		flex: 1 1 auto;
	}
	.card-image {
		padding-top: $layout-spacing-lg;
		&:first-child {
			padding-top: 0;
			img {
				border-top-left-radius: $border-radius;
				border-top-right-radius: $border-radius;
			}
		}
		&:last-child {
			img {
				border-bottom-left-radius: $border-radius;
				border-bottom-right-radius: $border-radius;
			}
		}
	}
}
.chip {
	align-items: center;
	background: $bg-color-dark;
	border-radius: 5rem;
	color: $gray-color-dark;
	display: inline-flex;
	font-size: 90%;
	height: $unit-6;
	line-height: $unit-4;
	margin: $unit-h;
	max-width: 100%;
	padding: $unit-1 $unit-2;
	text-decoration: none;
	vertical-align: middle;
	&.active {
		background: $primary-color;
		color: $light-color;
	}
	.avatar {
		margin-left: -$unit-2;
		margin-right: $unit-1;
	}
	.btn-clear {
		transform: scale(.75);
	}
}
.dropdown {
	display: inline-block;
	position: relative;
	.dropdown-title {
		cursor: pointer;
		padding: 0 1rem;
	}
	.menu {
		display: none;
		left: 0;
		line-height: 1.4;
		max-height: 50vh;
		overflow-y: auto;
		position: absolute;
		top: 100%;
	}
	&.dropdown-right {
		.menu {
			left: auto;
			right: 0;
		}
	}
	&.active .menu,
	.dropdown-toggle:focus + .menu,
	.menu:hover {
		display: block;
	}
	.btn-group {
		.dropdown-toggle:nth-last-child(2) {
			border-bottom-right-radius: $border-radius;
			border-top-right-radius: $border-radius;
		}
	}
}
.empty {
	background: $bg-color;
	border-radius: $border-radius;
	color: $gray-color-dark;
	text-align: center;
	padding: $unit-16 $unit-8;
	.empty-icon {
		margin-bottom: $layout-spacing-lg;
	}
	.empty-title,
	.empty-subtitle {
		margin: $layout-spacing auto;
	}
	.empty-action {
		margin-top: $layout-spacing-lg;
	}
}
.menu {
	@include shadow-variant(.05rem);
	background-color: white;
	list-style: none;
	margin: 0;
	min-width: $control-width-xs;
	z-index: $zindex-3;
	&.menu-nav {
		background: transparent;
		box-shadow: none;
	}
	.menu-item {
		color: inherit;
		display: block;
		padding: $unit-3;
		text-decoration: none;
		user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		text-decoration: none;
		&:focus,
		&:hover {
			background-color: #eee;
		}
		&:active,
		&.active {
			background: $secondary-color;
			color: $primary-color;
		}
		.form-checkbox,
		.form-radio,
		.form-switch {
			margin: $unit-h 0;
		}
		& + .menu-item {
			margin-top: $unit-1;
		}
	}
	.menu-badge {
		float: right;
		padding: $unit-1 0;
		.btn {
			margin-top: -$unit-h;
		}
	}
}
.modal {
	align-items: center;
	bottom: 0;
	display: none;
	justify-content: center;
	left: 0;
	overflow: hidden;
	padding: $layout-spacing;
	position: fixed;
	right: 0;
	top: 0;
	&:target,
	&.active {
		display: flex;
		z-index: $zindex-4;
		.modal-overlay {
			background-color: rgba(0, 0, 0, .5);
			bottom: 0;
			cursor: default;
			display: block;
			left: 0;
			position: absolute;
			right: 0;
			top: 0;
		}
		.modal-container {
			z-index: $zindex-0;
		}
	}
}
.modal-container {
	background-color: white;
	border-radius: $border-radius;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	width: $control-width-lg;
	.modal-header {
		background-color: whitesmoke;
		border-bottom: $border-width solid $border-color-dark;
		font-size: $font-size-lg;
		padding: $unit-4;
		position: relative;
		.close-modal {
			color: inherit;
			cursor: pointer;
			opacity: .5;
			padding: inherit;
			position: absolute;
			right: 0;
			top: 0;
			&:focus,
			&:hover {
				opacity: 1;
				text-decoration: none;
			}
			&::after {
				content: "\2715";
			}
		}
	}
	.modal-body {
		max-height: 75vh;
		overflow-y: auto;
		padding: $unit-4;
		position: relative;
	}
	.modal-footer {
		background-color: whitesmoke;
		border-top: $border-width solid $border-color-dark;
		padding: $unit-4;
		text-align: right;
		.close-modal {
			margin-right: 1em;
		}
	}
}
.nav {
	display: flex;
	flex-direction: column;
	list-style: none;
	margin: $unit-1 0;
	.nav-item {
		a {
			color: $gray-color-dark;
			padding: $unit-1 $unit-2;
			text-decoration: none;
			&:focus,
			&:hover {
				color: $primary-color;
			}
		}
		&.active {
			& > a {
				color: darken($gray-color-dark, 10%);
				font-weight: bold;
				&:focus,
				&:hover {
					color: $primary-color;
				}
			}
		}
	}
	& .nav {
		margin-bottom: $unit-2;
		margin-left: $unit-4;
	}
}
.panel {
	border: $border-width solid $border-color;
	border-radius: $border-radius;
	display: flex;
	flex-direction: column;
	.panel-header,
	.panel-footer {
		flex: 0 0 auto;
		padding: $layout-spacing-lg;
	}
	.panel-nav {
		flex: 0 0 auto;
	}
	.panel-body {
		flex: 1 1 auto;
		overflow-y: auto;
		padding: 0 $layout-spacing-lg;
	}
}
.step {
	display: flex;
	flex-wrap: nowrap;
	list-style: none;
	margin: $unit-1 0;
	width: 100%;
	.step-item {
		flex: 1 1 0;
		margin-top: 0;
		min-height: 1rem;
		text-align: center;
		position: relative;
		&:not(:first-child)::before {
			background: $primary-color;
			content: "";
			height: 2px;
			left: -50%;
			position: absolute;
			top: 9px;
			width: 100%;
		}
		a {
			color: $gray-color;
			display: inline-block;
			padding: 20px 10px 0;
			text-decoration: none;
			&::before {
				background: $primary-color;
				border: $border-width-lg solid $light-color;
				border-radius: 50%;
				content: "";
				display: block;
				height: $unit-3;
				left: 50%;
				position: absolute;
				top: $unit-1;
				transform: translateX(-50%);
				width: $unit-3;
				z-index: $zindex-0;
			}
		}
		&.active {
			a {
				&::before {
					background: $light-color;
					border: $border-width-lg solid $primary-color;
				}
			}
			& ~ .step-item {
				&::before {
					background: $border-color;
				}
				a {
					&::before {
						background: $gray-color-light;
					}
				}
			}
		}
	}
}
.tab {
	align-items: center;
	border-bottom: $border-width solid $border-color;
	display: flex;
	flex-wrap: wrap;
	list-style: none;
	input {
		display: none;
	}
	a,
	label,
	.tab-item {
		border-bottom: $border-width-lg solid transparent;
		color: inherit;
		cursor: pointer;
		display: block;
		margin: 0 $unit-2 0 0;
		padding: $unit-2 $unit-1 $unit-2 - $border-width-lg $unit-1;
		text-decoration: none;
		&:focus,
		&:hover {
			color: $link-color;
		}
	}
	&.active a,
	a.active,
	input[type="radio"]:checked + label,
	.tab-item.selected {
		border-bottom-color: $primary-color;
		color: $link-color;
	}
	&.tab-block {
		.tab-item {
			flex: 1 0 0;
			text-align: center;
			a {
				margin: 0;
			}
			.badge {
				&[data-badge]::after {
					position: absolute;
					right: $unit-h;
					top: $unit-h;
					transform: translate(0, 0);
				}
			}
		}
	}
	&:not(.tab-block) {
		.badge {
			padding-right: 0;
		}
	}
}
.tile {
	align-content: space-between;
	align-items: flex-start;
	display: flex;
	.tile-icon,
	.tile-action {
		flex: 0 0 auto;
	}
	.tile-content {
		flex: 1 1 auto;
		&:not(:first-child) {
			padding-left: $unit-2;
		}
		&:not(:last-child) {
			padding-right: $unit-2;
		}
	}
	.tile-title,
	.tile-subtitle {
		line-height: $line-height;
	}
	&.tile-centered {
		align-items: center;
		.tile-content {
			overflow: hidden;
		}
		.tile-title,
		.tile-subtitle {
			@include text-ellipsis();
			margin-bottom: 0;
		}
	}
}
.toast {
	@include toast-variant($dark-color);
	border: $border-width solid $dark-color;
	border-radius: $border-radius;
	color: $light-color;
	display: block;
	padding: $layout-spacing;
	width: 100%;
	&.toast-primary {
		@include toast-variant($primary-color);
	}
	&.toast-success {
		@include toast-variant($success-color);
	}
	&.toast-warning {
		@include toast-variant($warning-color);
	}
	&.toast-error {
		@include toast-variant($error-color);
	}
	a {
		color: $light-color;
		text-decoration: underline;
		&:focus,
		&:hover,
		&:active,
		&.active {
			opacity: .75;
		}
	}
	.btn-clear {
		margin: 4px -2px 4px 4px;
	}
}
.tooltip {
	position: relative;
	&::after {
		background: rgba($dark-color, .9);
		border-radius: $border-radius;
		bottom: 100%;
		color: $light-color;
		content: attr(data-tooltip);
		display: block;
		font-size: $font-size-sm;
		left: 50%;
		max-width: $control-width-sm;
		opacity: 0;
		overflow: hidden;
		padding: $unit-1 $unit-2;
		pointer-events: none;
		position: absolute;
		text-overflow: ellipsis;
		transform: translate(-50%, $unit-2);
		transition: all .2s ease;
		white-space: pre;
		z-index: $zindex-3;
	}
	&:focus,
	&:hover {
		&::after {
			opacity: 1;
			transform: translate(-50%, -$unit-1);
		}
	}
	&[disabled],
	&.disabled {
		pointer-events: auto;
	}
	&.tooltip-right {
		&::after {
			bottom: 50%;
			left: 100%;
			transform: translate(-$unit-1, 50%);
		}
		&:focus,
		&:hover {
			&::after {
				transform: translate($unit-1, 50%);
			}
		}
	}
	&.tooltip-bottom {
		&::after {
			bottom: auto;
			top: 100%;
			transform: translate(-50%, -$unit-2);
		}
		&:focus,
		&:hover {
			&::after {
				transform: translate(-50%, $unit-1);
			}
		}
	}
	&.tooltip-left {
		&::after {
			bottom: 50%;
			left: auto;
			right: 100%;
			transform: translate($unit-2, 50%);
		}
		&:focus,
		&:hover {
			&::after {
				transform: translate(-$unit-1, 50%);
			}
		}
	}
}
.divider,
.divider-vert {
	display: block;
	position: relative;
	&[data-content]::after {
		background: $bg-color-light;
		color: $gray-color;
		content: attr(data-content);
		display: inline-block;
		font-size: $font-size-sm;
		padding: 0 $unit-2;
		transform: translateY(-$font-size-sm + $border-width);
	}
}
.divider {
	border-top: $border-width solid $border-color;
	height: $border-width;
	margin: $unit-2 0;
	&[data-content] {
		margin: $unit-4 0;
	}
}
.divider-vert {
	display: block;
	padding: $unit-4;
	&::before {
		border-left: $border-width solid $border-color;
		bottom: $unit-2;
		content: "";
		display: block;
		left: 50%;
		position: absolute;
		top: $unit-2;
		transform: translateX(-50%);
	}
	&[data-content]::after {
		left: 50%;
		padding: $unit-1 0;
		position: absolute;
		top: 50%;
		transform: translate(-50%, -50%);
	}
}
.loading {
	color: transparent !important;
	min-height: $unit-4;
	pointer-events: none;
	position: relative;
	&::after {
		animation: loading 500ms infinite linear;
		border: $border-width-lg solid $primary-color;
		border-radius: 50%;
		border-right-color: transparent;
		border-top-color: transparent;
		box-sizing: border-box;
		content: "";
		display: block;
		height: $unit-4;
		left: 50%;
		margin-left: -$unit-2;
		margin-top: -$unit-2;
		position: absolute;
		top: 50%;
		width: $unit-4;
		z-index: $zindex-0;
	}
	&.loading-lg {
		min-height: $unit-10;
		&::after {
			height: $unit-8;
			margin-left: -$unit-4;
			margin-top: -$unit-4;
			width: $unit-8;
		}
	}
}
@keyframes loading {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
.clearfix::after {
	clear: both;
	content: "";
	display: table;
}
.float-left {
	float: left !important;
}
.float-right {
	float: right !important;
}
.centered {
	display: block;
	float: none;
	margin-left: auto;
	margin-right: auto;
}
.flex-centered {
	align-items: center;
	display: flex;
	justify-content: center;
}
.full-height {
	min-height: 100vh;
}
.block {
	display: block;
}
.fixed {
	position: fixed;
}
.relative,
.rel {
	position: relative;
}
.circle {
	border-radius: 50%;
}
.text-left,
.tl {
	text-align: left;
}
.text-center,
.tc {
	text-align: center;
}
.text-right,
.tr {
	text-align: right;
}
.text-small {
	font-size: .9em;
}
.text-large {
	font-size: 1.2em;
}
.text-ellipsis,
.te {
	@include text-ellipsis();
}
.hide {
	display: none !important;
}
// Autosize
.autosize {
	resize: none;
}
// Dragula
.gu-mirror {
	position: fixed !important;
	margin: 0 !important;
	z-index: 9999 !important;
	opacity: .8;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
	filter: alpha(opacity=80);
}
.gu-unselectable {
	user-select: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
}
.gu-transit {
	opacity: .2;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
	filter: alpha(opacity=20);
}
// Dev action controller
#dev {
	background-color: wheat;
	left: 0;
	margin: 0;
	opacity: .5;
	padding: 0 .5rem;
	position: fixed;
	top: 0;
	z-index: 10000;
	&:hover {
		opacity: 1;
	}
}